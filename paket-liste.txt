PROJEKT PAKET LISTE UND ERKLÄRUNGEN
====================================

Diese Datei erklärt alle npm-Pakete, die in Ihrem Projekt verwendet werden und wofür sie verwendet werden.

PRODUKTIONSABHÄNGIGKEITEN (dependencies)
========================================

@heroicons/react (2.2.0)
- Was es macht: Ermöglicht die Verwendung schöner SVG-Icons von Heroicons als React-Komponenten
- Verwendung: Professionelle Icons für Buttons, Menüs, Navigation
- Beispiel: <HomeIcon className="h-6 w-6" />

@vercel/analytics (1.5.0)
- Was es macht: Verfolgt Besucherstatistiken Ihrer Website mit Vercel Analytics
- Verwendung: Analysiert welche Seiten häufiger besucht werden, Nutzerverhalten
- Beispiel: import { Analytics } from '@vercel/analytics/react'

@vercel/speed-insights (1.2.0)
- Was es macht: Misst die Leistung und Geschwindigkeit Ihrer Website
- Verwendung: Verfolgt Seitenladezeiten, Core Web Vitals Metriken
- Beispiel: import { SpeedInsights } from '@vercel/speed-insights/next'

framer-motion (12.23.12)
- Was es macht: Erweiterte Animationsbibliothek für React
- Verwendung: Seitenübergänge, Hover-Effekte, Ladeanimationen
- Beispiel: motion.div animate={{ opacity: 1 }} transition={{ duration: 0.5 }}

next (15.4.6)
- Was es macht: Full-Stack Web-Framework basierend auf React
- Verwendung: Server-Side Rendering, Routing, API-Routen, Optimierung
- Beispiel: Seiten erstellen mit Next.js, API-Endpunkte

ogl (1.0.11)
- Was es macht: Leichte und schnelle 3D-Grafikbibliothek für WebGL
- Verwendung: 3D-Animationen, interaktive Grafiken, visuelle Effekte
- Beispiel: 3D-Hintergrundanimationen, Partikeleffekte

react (19.1.0)
- Was es macht: JavaScript-Bibliothek zum Erstellen von Benutzeroberflächen
- Verwendung: Komponentenbasierte UI-Entwicklung, State-Management
- Beispiel: React-Komponenten, Hooks, JSX

react-dom (19.1.0)
- Was es macht: DOM-Renderer um React im Webbrowser auszuführen
- Verwendung: Konvertiert React-Komponenten in HTML DOM
- Beispiel: ReactDOM.render() um Komponenten an DOM zu binden

react-hot-toast (2.5.2)
- Was es macht: Benutzerfreundliche Benachrichtigungsbibliothek (Toast)
- Verwendung: Erfolgs-, Fehler-, Warnmeldungen anzeigen
- Beispiel: toast.success('Vorgang erfolgreich!'), toast.error('Fehler aufgetreten!')

react-icons (5.5.0)
- Was es macht: Bietet beliebte Icon-Sets als React-Komponenten
- Verwendung: Font Awesome, Material Design, Feather Icons und mehr
- Beispiel: <FaHome />, <MdEmail />, <FiUser />

react-type-animation (3.2.0)
- Was es macht: Schreibmaschinen-Animationseffekt
- Verwendung: Animation von Texten Buchstabe für Buchstabe
- Beispiel: TypeAnimation-Komponente für animierte Texte

ENTWICKLUNGSABHÄNGIGKEITEN (devDependencies)
============================================

@eslint/eslintrc (3.x)
- Was es macht: Verwaltet ESLint-Konfigurationsdateien
- Verwendung: Code-Qualitätsregeln definieren
- Beispiel: Regeln in .eslintrc.js-Datei konfigurieren

@types/node (20.x)
- Was es macht: TypeScript-Typdefinitionen für Node.js
- Verwendung: Typsicherheit bei Verwendung von Node.js APIs mit TypeScript
- Beispiel: Stellt Typen für Node.js-Module wie fs, path bereit

@types/react (19.x)
- Was es macht: TypeScript-Typdefinitionen für React
- Verwendung: Typsicherheit in React-Komponenten
- Beispiel: Stellt Typen für Hooks wie useState, useEffect bereit

@types/react-dom (19.x)
- Was es macht: TypeScript-Typdefinitionen für React DOM
- Verwendung: Typsicherheit in ReactDOM APIs
- Beispiel: Stellt Typen für Funktionen wie render, hydrate bereit

autoprefixer (10.4.21)
- Was es macht: Fügt automatisch Vendor-Prefixe zu CSS hinzu
- Verwendung: CSS-Kompatibilität in verschiedenen Browsern
- Beispiel: Fügt automatisch -webkit-, -moz-, -ms- Präfixe hinzu

eslint (9.x)
- Was es macht: Code-Qualitätskontrolltool für JavaScript/TypeScript
- Verwendung: Überprüft Code-Standards, findet Fehler
- Beispiel: npm run lint um Code-Qualität zu prüfen

eslint-config-next (15.4.6)
- Was es macht: Spezielle ESLint-Konfiguration für Next.js
- Verwendung: Empfohlene Code-Regeln für Next.js-Projekte
- Beispiel: Next.js-spezifische Linting-Regeln

postcss (8.5.6)
- Was es macht: Tool zum Verarbeiten und Transformieren von CSS
- Verwendung: CSS-Optimierung, Vendor-Prefixe, Minifizierung
- Beispiel: CSS-Verarbeitung zusammen mit Tailwind CSS

tailwindcss (3.4.17)
- Was es macht: Utility-First CSS-Framework
- Verwendung: Schnelle UI-Entwicklung, responsives Design
- Beispiel: className="bg-blue-500 text-white p-4 rounded-lg"

typescript (5.x)
- Was es macht: Programmiersprache die JavaScript Typsicherheit hinzufügt
- Verwendung: Code-Qualität, Fehlerprävention, bessere IDE-Unterstützung
- Beispiel: Typdefinitionen in .tsx-Dateien

PAKET KATEGORIEN
================

UI UND ANIMATION:
- framer-motion: Erweiterte Animationen
- react-hot-toast: Benachrichtigungen
- react-icons: Icon-Bibliothek
- @heroicons/react: Professionelle Icons

ANALYTIK UND LEISTUNG:
- @vercel/analytics: Besucheranalyse
- @vercel/speed-insights: Leistungsverfolgung

3D UND VISUELL:
- ogl: WebGL 3D-Grafiken

CORE FRAMEWORK:
- next: Full-Stack React-Framework
- react: UI-Bibliothek
- react-dom: DOM-Renderer

ENTWICKLUNGSWERKZEUGE:
- typescript: Typsicherheit
- eslint: Code-Qualität
- tailwindcss: CSS-Framework
- postcss: CSS-Verarbeitung

WICHTIGE HINWEISE:
==================

1. Produktionspakete (dependencies) werden auf der Live-Website verwendet
2. Entwicklungspakete (devDependencies) werden nur während der Entwicklung verwendet
3. Paketversionen mit ^ Symbol erlauben Minor-Updates
4. Feste Versionen (z.B. 2.2.0) verwenden genau diese Version
5. Seien Sie vorsichtig beim Hinzufügen neuer Pakete, sie vergrößern das Projekt

UPDATE EMPFEHLUNGEN:
====================

- Für Sicherheitsupdates: npm audit fix
- Alle Pakete aktualisieren: npm update
- Bestimmtes Paket aktualisieren: npm update [paket-name]
- Veraltete Pakete prüfen: npm outdated

PAKET VERWALTUNG TIPPS:
=======================

- Regelmäßig npm audit ausführen für Sicherheitsprüfungen
- package-lock.json nicht manuell bearbeiten
- Bei Problemen node_modules löschen und neu installieren
- Neue Pakete nur bei Bedarf hinzufügen
- Versionskonflikte mit npm ls prüfen
